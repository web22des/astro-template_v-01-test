---
// src/components/Accordion.astro
const { items = [] } = Astro.props;
---

<div class="accordion-group">
    {items.map((item) => (
    <div class="accordion" data-accordion>
        <button class="accordion__header" data-trigger>
        <span class="accordion__title">{item.title}</span>
        <span class="_icon-redo2"></span>
        </button>
        <div class="accordion__content" hidden>
        <div class="accordion__inner">
            {item.content}
        </div>
        </div>
    </div>
    ))}
</div>



<script is:inline>
    document.querySelectorAll('[data-accordion]').forEach(accordion => {
    const trigger = accordion.querySelector('[data-trigger]');
    const content = accordion.querySelector('.accordion__content');

    trigger.addEventListener('click', () => {
        const isOpen = accordion.hasAttribute('data-open');
        
        document.querySelectorAll('[data-accordion][data-open]').forEach(item => {
        if (item !== accordion) {
            item.removeAttribute('data-open');
            animateClose(item);
        }
        });
        
        if (isOpen) {
        accordion.removeAttribute('data-open');
        animateClose(accordion);
        } else {
        accordion.setAttribute('data-open', '');
        animateOpen(accordion);
        }
    });

    function animateOpen(el) {
        const content = el.querySelector('.accordion__content');
        content.hidden = false;
        content.style.height = `${content.scrollHeight}px`;
    }

    function animateClose(el) {
        const content = el.querySelector('.accordion__content');
        content.style.height = `${content.scrollHeight}px`;
        requestAnimationFrame(() => {
        content.style.height = '0';
        content.addEventListener('transitionend', () => {
            content.hidden = true;
        }, { once: true });
        });
    }
    });
</script>