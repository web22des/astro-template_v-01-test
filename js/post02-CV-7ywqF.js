import { c as createComponent, a as renderComponent, r as renderTemplate, u as unescapeHTML } from './astro/server-wGLQO-FJ.js';
import 'kleur/colors';
import { $ as $$MarkdownLayout } from './MarkdownLayout-DrnWJRBc.js';

const html = () => "<h1 id=\"лучшая-практика-работы-с-markdownmdx-и-классами-в-astro-официальный-подход--рекомендации\">Лучшая практика работы с Markdown/MDX и классами в Astro (официальный подход + рекомендации)</h1>\n<h2 id=\"1-официальный-подход-по-документации-astro\">1. Официальный подход (по документации Astro)</h2>\n<h3 id=\"11-использование-layout--глобальных-стилей\">1.1. Использование layout + глобальных стилей</h3>\n<h4 id=\"как-работает\">Как работает:</h4>\n<ol>\n<li>\n<p>Создаёте layout-компонент для Markdown</p>\n</li>\n<li>\n<p>Импортируете CSS-файл</p>\n</li>\n<li>\n<p>Стилизуете стандартные HTML-элементы</p>\n</li>\n</ol>\n<h4 id=\"шаги\">Шаги:</h4>\n<h4 id=\"1-создайте-layout-srclayoutsmarkdownlayoutastro\">1. Создайте layout (src/layouts/MarkdownLayout.astro):</h4>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"astro\"><code><span class=\"line\"><span style=\"color:#6A737D\">---</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Импорт стилей</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#9ECBFF\"> '../styles/markdown.css'</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#E1E4E8\"> { </span><span style=\"color:#79B8FF\">frontmatter</span><span style=\"color:#E1E4E8\"> } </span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\"> Astro.props;</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">---</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">&#x3C;</span><span style=\"color:#85E89D\">html</span><span style=\"color:#E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">&#x3C;</span><span style=\"color:#85E89D\">head</span><span style=\"color:#E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  &#x3C;</span><span style=\"color:#85E89D\">title</span><span style=\"color:#E1E4E8\">>{frontmatter.title}&#x3C;/title></span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">&#x3C;/</span><span style=\"color:#85E89D\">head</span><span style=\"color:#E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">&#x3C;</span><span style=\"color:#85E89D\">body</span><span style=\"color:#E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  &#x3C;</span><span style=\"color:#85E89D\">article</span><span style=\"color:#B392F0\"> class</span><span style=\"color:#E1E4E8\">=</span><span style=\"color:#9ECBFF\">\"markdown-content\"</span><span style=\"color:#E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    &#x3C;</span><span style=\"color:#85E89D\">slot</span><span style=\"color:#E1E4E8\"> /> </span><span style=\"color:#6A737D\">&#x3C;!-- Сюда вставится содержимое .md --></span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  &#x3C;/</span><span style=\"color:#85E89D\">article</span><span style=\"color:#E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">&#x3C;/</span><span style=\"color:#85E89D\">body</span><span style=\"color:#E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">&#x3C;/</span><span style=\"color:#85E89D\">html</span><span style=\"color:#E1E4E8\">></span></span></code></pre>\n<h4 id=\"2-добавьте-стили-srcstylesmarkdowncss\">2. Добавьте стили (src/styles/markdown.css):</h4>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\"><code><span class=\"line\"><span style=\"color:#B392F0\">.markdown-content</span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">    max-width</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">800</span><span style=\"color:#F97583\">px</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">    margin</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">0</span><span style=\"color:#79B8FF\"> auto</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">/* Стилизация элементов Markdown */</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">.markdown-content</span><span style=\"color:#85E89D\"> h1</span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">    font-size</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">2</span><span style=\"color:#F97583\">rem</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">    color</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">var</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#FFAB70\">--color-primary</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0\">.markdown-content</span><span style=\"color:#85E89D\"> img</span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">    border-radius</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">8</span><span style=\"color:#F97583\">px</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">    margin</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">1</span><span style=\"color:#F97583\">rem</span><span style=\"color:#79B8FF\"> 0</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span></code></pre>\n<h4 id=\"3-в-md-файле-укажите-layout\">3. В .md-файле укажите layout:</h4>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"markdown\"><code><span class=\"line\"><span style=\"color:#79B8FF;font-weight:bold\">---</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">layout: ../layouts/MarkdownLayout.astro</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">title: \"Моя статья\"</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF;font-weight:bold\">---</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#79B8FF;font-weight:bold\"># Заголовок статьи</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Это Markdown-контент...</span></span></code></pre>\n<h3 id=\"12-использование-apply-для-компонентного-подхода\">1.2. Использование @apply для компонентного подхода</h3>\n<p>Если используете Tailwind или PostCSS:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\"><code><span class=\"line\"><span style=\"color:#6A737D\">/* markdown.css */</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">.markdown-content</span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    @</span><span style=\"color:#79B8FF\">apply</span><span style=\"color:#79B8FF\"> prose</span><span style=\"color:#79B8FF\"> prose-lg</span><span style=\"color:#79B8FF\"> max-w-</span><span style=\"color:#E1E4E8\">3</span><span style=\"color:#79B8FF\">xl</span><span style=\"color:#79B8FF\"> mx-auto</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0\">.markdown-content</span><span style=\"color:#85E89D\"> h1</span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    @</span><span style=\"color:#79B8FF\">apply</span><span style=\"color:#79B8FF\"> text-</span><span style=\"color:#E1E4E8\">3</span><span style=\"color:#79B8FF\">xl</span><span style=\"color:#79B8FF\"> font-bold</span><span style=\"color:#79B8FF\"> mb-</span><span style=\"color:#E1E4E8\">6;</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span></code></pre>\n<h3 id=\"2-если-нужны-кастомные-классы-бэм-и-др\">2. Если нужны кастомные классы (БЭМ и др.)</h3>\n<h4 id=\"21-использование-mdx-вместо-markdown\">2.1. Использование MDX вместо Markdown</h4>\n<p>MDX позволяет смешивать JSX и Markdown:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"mdx\"><code><span class=\"line\"><span style=\"color:#79B8FF;font-weight:bold\">---</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#9ECBFF\"> './article-styles.css'</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF;font-weight:bold\">---</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">&#x3C;</span><span style=\"color:#85E89D\">div</span><span style=\"color:#B392F0\"> className</span><span style=\"color:#F97583\">=</span><span style=\"color:#9ECBFF\">\"article\"</span><span style=\"color:#E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  &#x3C;</span><span style=\"color:#85E89D\">h1</span><span style=\"color:#B392F0\"> className</span><span style=\"color:#F97583\">=</span><span style=\"color:#9ECBFF\">\"article__title\"</span><span style=\"color:#E1E4E8\">>Заголовок&#x3C;/</span><span style=\"color:#85E89D\">h1</span><span style=\"color:#E1E4E8\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Это </span><span style=\"color:#9ECBFF\">**</span><span style=\"color:#E1E4E8\">Markdown</span><span style=\"color:#9ECBFF\">**</span><span style=\"color:#E1E4E8\">-контент с </span><span style=\"color:#9ECBFF\">_</span><span style=\"color:#E1E4E8\">JSX</span><span style=\"color:#9ECBFF\">_</span><span style=\"color:#E1E4E8\">!</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">&#x3C;/</span><span style=\"color:#85E89D\">div</span><span style=\"color:#E1E4E8\">></span></span></code></pre>\n<h4 id=\"плюсы\">Плюсы:</h4>\n<ul>\n<li>\n<p>Полная поддержка HTML/JSX</p>\n</li>\n<li>\n<p>Можно использовать любые классы (БЭМ, CSS Modules и т.д.)</p>\n</li>\n<li>\n<p>Компонентный подход</p>\n</li>\n</ul>\n<h4 id=\"22-переопределение-элементов-через-components-для-mdx\">2.2. Переопределение элементов через components (для MDX)</h4>\n<p>В astro.config.mjs:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#F97583\">export</span><span style=\"color:#F97583\"> default</span><span style=\"color:#B392F0\"> defineConfig</span><span style=\"color:#E1E4E8\">({</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    markdown: {</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">        shikiConfig: { theme: </span><span style=\"color:#9ECBFF\">\"github-dark\"</span><span style=\"color:#E1E4E8\"> },</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    mdx: {</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">        components: {</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">            h1: </span><span style=\"color:#9ECBFF\">\"/src/components/Heading.astro\"</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">            p: </span><span style=\"color:#9ECBFF\">\"/src/components/Paragraph.astro\"</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">        },</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">});</span></span></code></pre>\n<h4 id=\"пример-компонента-headingastro\">Пример компонента (Heading.astro):</h4>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"astro\"><code><span class=\"line\"><span style=\"color:#6A737D\">---</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#E1E4E8\"> { </span><span style=\"color:#79B8FF\">children</span><span style=\"color:#E1E4E8\"> } </span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\"> Astro.props;</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">---</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">&#x3C;</span><span style=\"color:#85E89D\">h1</span><span style=\"color:#B392F0\"> class</span><span style=\"color:#E1E4E8\">=</span><span style=\"color:#9ECBFF\">\"article__title\"</span><span style=\"color:#E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  {children}</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">&#x3C;/</span><span style=\"color:#85E89D\">h1</span><span style=\"color:#E1E4E8\">></span></span></code></pre>\n<h2 id=\"3-критерии-выбора-подхода\">3. Критерии выбора подхода</h2>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Ситуация</th><th>Решение</th><th>Плюсы</th></tr></thead><tbody><tr><td>Простой Markdown-контент</td><td>Layout + глобальные стили</td><td>- Простота реализации Работает “из коробки”- Минимум настроек</td></tr><tr><td>Нужны кастомные классы</td><td>MDX + CSS Modules</td><td>- Поддержка БЭМ Локальные стили Гибкость именования</td></tr><tr><td>Комплексные статьи</td><td>MDX + кастомные компоненты</td><td>- Максимальный контроль Переиспользуемые компоненты Чистая разметка</td></tr><tr><td>Строгие требования к SEO</td><td>Markdown с layout</td><td>- Лучшая SEO-оптимизация Чистый HTML на выходе</td></tr><tr><td>Интерактивные элементы</td><td>MDX с React/Vue компонентами</td><td>- Возможность вставки JSX Интерактивность</td></tr></tbody></table>\n<h2 id=\"4-главные-рекомендации\">4. Главные рекомендации</h2>\n<ol>\n<li>\n<p>Для простых статей используйте обычный Markdown с layout-стилями.</p>\n</li>\n<li>\n<p>Если нужен БЭМ/кастомные классы — переходите на MDX.</p>\n</li>\n<li>\n<p>Не усложняйте без необходимости (избегайте кастомных парсеров).</p>\n</li>\n<li>\n<p>Используйте стандартные возможности Astro — они покрывают 90% случаев.</p>\n</li>\n</ol>\n<h4 id=\"официальные-ресурсы\">Официальные ресурсы:</h4>\n<ul>\n<li><a href=\"https://docs.astro.build/ru/guides/markdown-content/\">Astro Markdown Guide</a></li>\n<li><a href=\"https://docs.astro.build/ru/guides/integrations-guide/mdx/\">Astro MDX Docs</a></li>\n</ul>";

				const frontmatter = {"layout":"../../layouts/MarkdownLayout.astro","title":"Лучшая практика работы с Markdown/MDX и классами в Astro (официальный подход + рекомендации)","date":"2023-11-16T00:00:00.000Z","description":"Это пример описания поста"};
				const file = "/home/runner/work/astro-template_v-01-test/astro-template_v-01-test/src/pages/posts/post02.md";
				const url = "/astro-template_v-01-test/posts/post02/";
				function rawContent() {
					return "   \n                                          \n                                                                                                     \n\n                \n                                        \n   \n\n# Лучшая практика работы с Markdown/MDX и классами в Astro (официальный подход + рекомендации)\n\n## 1. Официальный подход (по документации Astro)\n\n### 1.1. Использование layout + глобальных стилей\n\n#### Как работает:\n\n1. Создаёте layout-компонент для Markdown\n\n2. Импортируете CSS-файл\n\n3. Стилизуете стандартные HTML-элементы\n\n#### Шаги:\n\n#### 1. Создайте layout (src/layouts/MarkdownLayout.astro):\n\n```astro\n---\n// Импорт стилей\nimport '../styles/markdown.css';\nconst { frontmatter } = Astro.props;\n---\n<html>\n<head>\n  <title>{frontmatter.title}</title>\n</head>\n<body>\n  <article class=\"markdown-content\">\n    <slot /> <!-- Сюда вставится содержимое .md -->\n  </article>\n</body>\n</html>\n```\n\n#### 2. Добавьте стили (src/styles/markdown.css):\n\n```css\n.markdown-content {\n    max-width: 800px;\n    margin: 0 auto;\n}\n\n/* Стилизация элементов Markdown */\n.markdown-content h1 {\n    font-size: 2rem;\n    color: var(--color-primary);\n}\n\n.markdown-content img {\n    border-radius: 8px;\n    margin: 1rem 0;\n}\n```\n\n#### 3. В .md-файле укажите layout:\n\n```markdown\n---\nlayout: ../layouts/MarkdownLayout.astro\ntitle: \"Моя статья\"\n---\n\n# Заголовок статьи\n\nЭто Markdown-контент...\n```\n\n### 1.2. Использование @apply для компонентного подхода\n\nЕсли используете Tailwind или PostCSS:\n\n```css\n/* markdown.css */\n.markdown-content {\n    @apply prose prose-lg max-w-3xl mx-auto;\n}\n\n.markdown-content h1 {\n    @apply text-3xl font-bold mb-6;\n}\n```\n\n### 2. Если нужны кастомные классы (БЭМ и др.)\n\n#### 2.1. Использование MDX вместо Markdown\n\nMDX позволяет смешивать JSX и Markdown:\n\n```mdx\n---\nimport './article-styles.css';\n---\n\n<div className=\"article\">\n  <h1 className=\"article__title\">Заголовок</h1>\n\nЭто **Markdown**-контент с _JSX_!\n\n</div>\n```\n\n#### Плюсы:\n\n-   Полная поддержка HTML/JSX\n\n-   Можно использовать любые классы (БЭМ, CSS Modules и т.д.)\n\n-   Компонентный подход\n\n#### 2.2. Переопределение элементов через components (для MDX)\n\nВ astro.config.mjs:\n\n```js\nexport default defineConfig({\n    markdown: {\n        shikiConfig: { theme: \"github-dark\" },\n    },\n    mdx: {\n        components: {\n            h1: \"/src/components/Heading.astro\",\n            p: \"/src/components/Paragraph.astro\",\n        },\n    },\n});\n```\n\n#### Пример компонента (Heading.astro):\n\n```astro\n---\nconst { children } = Astro.props;\n---\n\n<h1 class=\"article__title\">\n  {children}\n</h1>\n```\n\n## 3. Критерии выбора подхода\n\n| Ситуация                 | Решение                      | Плюсы                                                               |\n| ------------------------ | ---------------------------- | ------------------------------------------------------------------- |\n| Простой Markdown-контент | Layout + глобальные стили    | - Простота реализации Работает \"из коробки\"- Минимум настроек       |\n| Нужны кастомные классы   | MDX + CSS Modules            | - Поддержка БЭМ Локальные стили Гибкость именования                 |\n| Комплексные статьи       | MDX + кастомные компоненты   | - Максимальный контроль Переиспользуемые компоненты Чистая разметка |\n| Строгие требования к SEO | Markdown с layout            | - Лучшая SEO-оптимизация Чистый HTML на выходе                      |\n| Интерактивные элементы   | MDX с React/Vue компонентами | - Возможность вставки JSX Интерактивность                           |\n\n## 4. Главные рекомендации\n\n1. Для простых статей используйте обычный Markdown с layout-стилями.\n\n2. Если нужен БЭМ/кастомные классы — переходите на MDX.\n\n3. Не усложняйте без необходимости (избегайте кастомных парсеров).\n\n4. Используйте стандартные возможности Astro — они покрывают 90% случаев.\n\n#### Официальные ресурсы:\n\n-   [Astro Markdown Guide](https://docs.astro.build/ru/guides/markdown-content/)\n-   [Astro MDX Docs](https://docs.astro.build/ru/guides/integrations-guide/mdx/)\n";
				}
				async function compiledContent() {
					return await html();
				}
				function getHeadings() {
					return [{"depth":1,"slug":"лучшая-практика-работы-с-markdownmdx-и-классами-в-astro-официальный-подход--рекомендации","text":"Лучшая практика работы с Markdown/MDX и классами в Astro (официальный подход + рекомендации)"},{"depth":2,"slug":"1-официальный-подход-по-документации-astro","text":"1. Официальный подход (по документации Astro)"},{"depth":3,"slug":"11-использование-layout--глобальных-стилей","text":"1.1. Использование layout + глобальных стилей"},{"depth":4,"slug":"как-работает","text":"Как работает:"},{"depth":4,"slug":"шаги","text":"Шаги:"},{"depth":4,"slug":"1-создайте-layout-srclayoutsmarkdownlayoutastro","text":"1. Создайте layout (src/layouts/MarkdownLayout.astro):"},{"depth":4,"slug":"2-добавьте-стили-srcstylesmarkdowncss","text":"2. Добавьте стили (src/styles/markdown.css):"},{"depth":4,"slug":"3-в-md-файле-укажите-layout","text":"3. В .md-файле укажите layout:"},{"depth":3,"slug":"12-использование-apply-для-компонентного-подхода","text":"1.2. Использование @apply для компонентного подхода"},{"depth":3,"slug":"2-если-нужны-кастомные-классы-бэм-и-др","text":"2. Если нужны кастомные классы (БЭМ и др.)"},{"depth":4,"slug":"21-использование-mdx-вместо-markdown","text":"2.1. Использование MDX вместо Markdown"},{"depth":4,"slug":"плюсы","text":"Плюсы:"},{"depth":4,"slug":"22-переопределение-элементов-через-components-для-mdx","text":"2.2. Переопределение элементов через components (для MDX)"},{"depth":4,"slug":"пример-компонента-headingastro","text":"Пример компонента (Heading.astro):"},{"depth":2,"slug":"3-критерии-выбора-подхода","text":"3. Критерии выбора подхода"},{"depth":2,"slug":"4-главные-рекомендации","text":"4. Главные рекомендации"},{"depth":4,"slug":"официальные-ресурсы","text":"Официальные ресурсы:"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${renderComponent(result, 'Layout', $$MarkdownLayout, {
								file,
								url,
								content,
								frontmatter: content,
								headings: getHeadings(),
								rawContent,
								compiledContent,
								'server:root': true,
							}, {
								'default': () => renderTemplate`${unescapeHTML(html())}`
							})}`;
				});

const __vite_glob_0_1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	Content,
	compiledContent,
	default: Content,
	file,
	frontmatter,
	getHeadings,
	rawContent,
	url
}, Symbol.toStringTag, { value: 'Module' }));

export { __vite_glob_0_1 as _ };
